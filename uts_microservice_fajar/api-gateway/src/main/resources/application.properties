server.port=9000
# server.address=172.20.10.4

spring.application.name=api-gateway

# Route untuk Payment Service melalui Load Balancer
spring.cloud.gateway.routes[0].id=booking_route
spring.cloud.gateway.routes[0].uri=lb://booking-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/booking/**

# # Route untuk Produk Service melalui Load Balancer
spring.cloud.gateway.routes[1].id=movie_route
spring.cloud.gateway.routes[1].uri=lb://movie-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/movie/**

# # Route untuk Order Service melalui Load Balancer
spring.cloud.gateway.routes[2].id=customer_route
spring.cloud.gateway.routes[2].uri=lb://customer-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/customer/**

# # Route untuk Customer Service di port 8084
spring.cloud.gateway.routes[3].id=customer_route_8084
spring.cloud.gateway.routes[3].uri=http://eurekaserver:8084
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/customers/**

# # Route untuk Customer Service di port 8080
# spring.cloud.gateway.routes[4].id=customer_route_8080
# spring.cloud.gateway.routes[4].uri=http://eurekaserver:8080
# spring.cloud.gateway.routes[4].predicates[0]=Path=/api/customers/**

# # Route untuk Payment Service di port 8080
# spring.cloud.gateway.routes[5].id=payment_route_8080
# spring.cloud.gateway.routes[5].uri=http://eurekaserver:8080
# spring.cloud.gateway.routes[5].predicates[0]=Path=/api/payments/**

# # Route untuk Produk Service di port 8080
# spring.cloud.gateway.routes[6].id=produk_route_8080
# spring.cloud.gateway.routes[6].uri=http://eurekaserver:8080
# spring.cloud.gateway.routes[6].predicates[0]=Path=/api/produk/**

# # Route untuk Order Service di port 8080
# spring.cloud.gateway.routes[7].id=order_route_8080
# spring.cloud.gateway.routes[7].uri=http://eurekaserver:8080
# spring.cloud.gateway.routes[7].predicates[0]=Path=/api/orders/**

# Mengaktifkan Discovery Locator untuk menemukan layanan secara otomatis dari Eureka
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Konfigurasi Eureka Server
eureka.client.service-url.defaultZone=http://eurekaserver:8761/eureka/
spring.main.web-application-type=reactive

# Prometheus Metrics Exposure
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true